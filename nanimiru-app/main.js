function 定数(){}
const serverBase="https://script.google.com/macros/s/AKfycbza3MEzjv_fRfeFcgbLWtLC4XbT0zXK1C9Pwa3zDL3oZBIOzXgGCesrF-qMledjIm0wJw/exec";function 地域マスタ取得(event){const nanimiruAppStore=JSON.parse(localStorage.getItem('nanimiru-app'))||{};const regions=nanimiruAppStore.regions||[];const settings=nanimiruAppStore.settings||{};if(regions.length>0){const selectRegions=document.querySelector('#select-regions');selectRegions.innerHTML='';regions.forEach(region=>{const option=document.createElement('option');option.value=region.code;option.text=region.name;selectRegions.appendChild(option)});if(settings.myRegion){selectRegions.value=settings.myRegion}
return}else{nanimiruAppStore.regions=regions;nanimiruAppStore.settings=settings}
fetch(serverBase+'?action=getRegions').then(response=>response.json()).then(data=>{const selectRegions=document.querySelector('#select-regions');selectRegions.innerHTML='';data.regions.forEach(region=>{const option=document.createElement('option');option.value=region.code;option.text=region.name;selectRegions.appendChild(option)});const myRegion=Number(selectRegions.value);nanimiruAppStore.regions=data.regions;nanimiruAppStore.settings.myRegion=myRegion;localStorage.setItem('nanimiru-app',JSON.stringify(nanimiruAppStore))}).catch(error=>{console.error('地域マスタ取得に失敗しました:',error)})}
function 地域選択(event){const nanimiruAppStore=JSON.parse(localStorage.getItem('nanimiru-app'))||{};const settings=nanimiruAppStore.settings||{};settings.myRegion=Number(event.target.value);nanimiruAppStore.settings=settings;localStorage.setItem('nanimiru-app',JSON.stringify(nanimiruAppStore))}
let userToken=null;let next_question_time=null;let expiration_time=null;let server_time=null;async function 初期アクション実行(event){const questionButton=document.getElementById('question-button');const nextQuestionSecondElement=document.getElementById('next-question-second');questionButton.disabled=!0;nextQuestionSecondElement.textContent="";nextQuestionSecondElement.style.visibility='visible';try{const response=await fetch(serverBase+'?action=init');const data=await response.json();userToken=data.token;next_question_time=new Date(data.next_question_time);expiration_time=new Date(data.expiration_time);server_time=new Date(data.server_time);if(!(userToken|next_question_time|server_time)){throw new Exception("初期化エラー")}
let now=server_time;const questionButtonElement=document.getElementById('question-button');const updateNextQuestionTime=()=>{const diff=next_question_time-now;if(diff>0){nextQuestionSecondElement.textContent=`質問できるまで${Math.floor(diff / 1000)}秒`}else{questionButtonElement.disabled=!1;nextQuestionSecondElement.style.visibility='hidden';clearInterval(intervalId)}
now=new Date(now.getTime()+1000)};const intervalId=setInterval(updateNextQuestionTime,1000);updateNextQuestionTime()}catch(error){console.error('初期化に失敗しました:',error);nextQuestionSecondElement.textContent='エラーが発生しました'}}
async function 質問発行(event){if(expiration_time<new Date()){初期アクション実行();return}
const modal=document.getElementById('ons-modal1');modal.visible=!0;const selectRegions=document.querySelector('#select-regions');const regionCode=selectRegions.value;const questionText=document.getElementById('question-text');const question=questionText.value;const bangumiList=document.getElementById('bangumi-list');bangumiList.textContent='';try{const response=await fetch(serverBase+'?action=question&token='+userToken+'&region='+regionCode+'&question='+question)
const contentType=response.headers.get('content-type');if(contentType.includes("text/plain"))throw new Error(await response.text());const data=await response.json();const titleTemplate=document.getElementById('bangumi-list-item-title');const titleClone=document.importNode(titleTemplate.content,!0);titleClone.textContent=`みたい番組： ${question}`;bangumiList.append(titleClone);if(data.response.length===0){const nonElement=document.createElement('ons-list-item');nonElement.textContent='番組がないかも';bangumiList.appendChild(nonElement)}else{let listContent=[];data.response.forEach(responseItem=>{const template=document.getElementById('bangumi-list-item-template');const clone=document.importNode(template.content,!0);const tvProgramItem=data.tvProgram.find(tvProgram=>tvProgram.link===responseItem.link);if(tvProgramItem){clone.querySelector('.bangumi-list-item-title').textContent=tvProgramItem.title;clone.querySelector('.bangumi-list-item-genre').textContent=tvProgramItem.genre;clone.querySelector('.bangumi-list-item-station').textContent=tvProgramItem.station;clone.querySelector('.bangumi-list-item-time').textContent=tvProgramItem.time;clone.querySelector('.bangumi-list-item-link').href=`https://www.tvkingdom.jp${tvProgramItem.link}`;clone.querySelector('.bangumi-list-item-comment').textContent=responseItem.comment;listContent.push(clone)}});const nowHour=new Date().getHours();const nextDayData=listContent.filter(item=>{const time=item.querySelector('.bangumi-list-item-time').textContent;const[hour,minute]=time.split(':').map(Number);return hour<nowHour});const todayData=listContent.filter(item=>{const time=item.querySelector('.bangumi-list-item-time').textContent;const[hour,minute]=time.split(':').map(Number);return hour>=nowHour});nextDayData.sort((a,b)=>{const timeA=a.querySelector('.bangumi-list-item-time').textContent;const timeB=b.querySelector('.bangumi-list-item-time').textContent;const[hourA,minuteA]=timeA.split(':').map(Number);const[hourB,minuteB]=timeB.split(':').map(Number);return hourA===hourB?minuteA-minuteB:hourA-hourB});todayData.sort((a,b)=>{const timeA=a.querySelector('.bangumi-list-item-time').textContent;const timeB=b.querySelector('.bangumi-list-item-time').textContent;const[hourA,minuteA]=timeA.split(':').map(Number);const[hourB,minuteB]=timeB.split(':').map(Number);return hourA===hourB?minuteA-minuteB:hourA-hourB});listContent=[...todayData,...nextDayData];if(listContent.length===0){const nonElement=document.createElement('ons-list-item');nonElement.textContent='番組がないかも';bangumiList.appendChild(nonElement)}else{listContent.forEach(item=>{bangumiList.appendChild(item)})}}
questionText.value=""}catch(error){console.error('質問発行に失敗しました:',error);const nonElement=document.createElement('ons-list-item');nonElement.textContent='エラーが発生しました';bangumiList.appendChild(nonElement)}finally{modal.visible=!1;初期アクション実行()}}
function 初回起動時(event){const nanimiruAppStore=JSON.parse(localStorage.getItem('nanimiru-app'))||{};const settings=nanimiruAppStore.settings||{};if(!settings.sawFirstTimeMessage){const chiikiPopover=document.getElementById('chiiki-popover');chiikiPopover.show();chiikiPopover.querySelector('.next-button').addEventListener('click',()=>{chiikiPopover.hide();const kensakuPopover=document.getElementById('kensaku-popover');kensakuPopover.show();kensakuPopover.querySelector('.next-button').addEventListener('click',()=>{kensakuPopover.hide();const shitumonPopover=document.getElementById('shitumon-popover');shitumonPopover.show();shitumonPopover.querySelector('.ok-button').addEventListener('click',()=>{shitumonPopover.hide();settings.sawFirstTimeMessage=!0;nanimiruAppStore.settings=settings;localStorage.setItem('nanimiru-app',JSON.stringify(nanimiruAppStore))})})})}}
document.addEventListener('init',(event)=>{let page=event.target;if(page.id==='ons-page1'){let questionbutton_element=document.querySelector('#question-button');if(questionbutton_element){questionbutton_element.addEventListener('click',質問発行);page.addEventListener('destroy',function(event){questionbutton_element.removeEventListener('click',質問発行)},{'once':!0})}
let onsselectregions_element=document.querySelector('#ons-select-regions');if(onsselectregions_element){onsselectregions_element.addEventListener('change',地域選択);page.addEventListener('destroy',function(event){onsselectregions_element.removeEventListener('change',地域選択)},{'once':!0})}
地域マスタ取得(event);初期アクション実行(event);初回起動時(event)}})