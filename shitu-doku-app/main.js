function リードページサンプル初期化(event){const textareaInputText=document.getElementById('textarea-input-text');const onsButtonReadStart=document.getElementById('ons-button-read-start');const spanReadText=document.getElementById('span-read-text');const onsInputReadSpeed=document.getElementById('ons-input-read-speed');const spanCps=document.getElementById('span-cps');const spanCpm=document.getElementById('span-cpm');const spanStartToEndSecond=document.getElementById('span-start-to-end-second');const spanPrevReadText=document.getElementById('span-prev-read-text');const spanNextReadText=document.getElementById('span-next-read-text');const divReadTextContainer=document.getElementById('div-read-text-container');const onsButtonReadRestart=document.getElementById('ons-button-read-restart');const onsProgressBarCharCount=document.getElementById('ons-progress-bar-char-count');const spanProgressCharcount=document.getElementById('span-progress-charcount');let isReading=!1;let stopReading=!1;let readTimerId=null;let startTime=null;let totalChars=0;let pauseOnDelimiters=!0;const segmenter=new TinySegmenter();const delimiters=/[、。，．…！？]/;const prevLineCount=1;const nextLineCount=2;const initialFontSize=parseFloat(window.getComputedStyle(spanReadText).fontSize);let currentSegmentIndex=0;let combinedSegments=[];let prevSegments=[];let totalInputChars=0;function extractNumberSequence(text){let numberSequence='';let i=0;while(i<text.length){if(/[0-9０-９.,]/.test(text[i])){numberSequence+=text[i];i++}else{return{number:null}}}
if(numberSequence){return{number:numberSequence,nextIndex:i}}
return{number:'',nextIndex:0}}
function adjustFontSize(element,text){element.style.fontSize=initialFontSize+'px';let currentFontSize=initialFontSize;element.textContent=text;while(element.offsetWidth>element.parentElement.offsetWidth&&currentFontSize>8){currentFontSize-=1;element.style.fontSize=currentFontSize+'px'}}
function fixContainerHeight(){const currentHeight=divReadTextContainer.offsetHeight;divReadTextContainer.style.height=`${currentHeight}px`;divReadTextContainer.style.overflowY='auto'}
function unfixContainerHeight(){divReadTextContainer.style.height='';divReadTextContainer.style.overflowY=''}
async function readText(){isReading=!0;onsButtonReadStart.textContent='停止';fixContainerHeight();const inputText=(textareaInputText.value).replace(" ","").replace("　","");const readSpeed=parseInt(onsInputReadSpeed.value,10);while(currentSegmentIndex<combinedSegments.length){if(stopReading){stopReading=!1;break}
let displaySegment=combinedSegments[currentSegmentIndex];totalChars+=String(displaySegment).length;let prevText='';let prevStartIndex=Math.max(0,currentSegmentIndex-prevLineCount);for(let i=prevStartIndex;i<currentSegmentIndex;i++){if(prevSegments[i-prevStartIndex]){prevText+=prevSegments[i-prevStartIndex]+"<br>"}}
let nextText='';for(let i=currentSegmentIndex+1;i<Math.min(currentSegmentIndex+1+nextLineCount,combinedSegments.length);i++){nextText+=combinedSegments[i]+"<br>"}
spanPrevReadText.innerHTML=prevText.trim()||'\u00A0';spanReadText.innerHTML=String(displaySegment)||'\u00A0';spanNextReadText.innerHTML=nextText.trim()||'\u00A0';adjustFontSize(spanReadText,String(displaySegment)||'\u00A0');prevSegments.push(displaySegment);if(prevSegments.length>prevLineCount){prevSegments.shift()}
if(totalInputChars>0){const progress=(totalChars/totalInputChars)*100;onsProgressBarCharCount.value=progress;spanProgressCharcount.textContent=`${totalChars}/${totalInputChars}`}
const waitTime=delimiters.test(displaySegment)?(pauseOnDelimiters?readSpeed*2:readSpeed):readSpeed;await new Promise(resolve=>{readTimerId=setTimeout(resolve,waitTime)});currentSegmentIndex++}
if(currentSegmentIndex>=combinedSegments.length){isReading=!1;onsButtonReadStart.textContent='開始';calculateAndDisplayTimeAndCpsAndCpm();unfixContainerHeight();if(totalInputChars>0){onsProgressBarCharCount.value=0;spanProgressCharcount.textContent=`0/${totalInputChars}`}}}
function calculateAndDisplayCpsAndCpm(){if(startTime){const endTime=new Date();const elapsedTime=(endTime-startTime)/1000;if(elapsedTime>0){const cps=totalChars/elapsedTime;const cpm=cps*60;spanCps.textContent=`CPS: ${cps.toFixed(2)} 文字/秒`;spanCpm.textContent=`CPM: ${cpm.toFixed(2)} 文字/分`}else{spanCps.textContent=`CPS: 0.00 文字/秒`;spanCpm.textContent=`CPM: 0.00 文字/分`}}else{spanCps.textContent=`CPS: 0.00 文字/秒`;spanCpm.textContent=`CPM: 0.00 文字/分`}}
function calculateAndDisplayTimeAndCpsAndCpm(){if(startTime){const endTime=new Date();const elapsedTime=(endTime-startTime)/1000;spanStartToEndSecond.textContent=`開始から停止まで：${elapsedTime.toFixed(2)} 秒`;calculateAndDisplayCpsAndCpm()}else{spanStartToEndSecond.textContent=`開始から停止まで：0.00 秒`;calculateAndDisplayCpsAndCpm()}
if(!isReading){}}
function initializeRead(){const inputText=(textareaInputText.value).replace(" ","").replace("　","");startTime=new Date();totalChars=0;totalInputChars=inputText.length;const segments=segmenter.segment(inputText);combinedSegments=[];let segmentIndex=0;while(segmentIndex<segments.length){let currentSegment=segments[segmentIndex];let{number}=extractNumberSequence(currentSegment);if(number){let newNumber=number;let numberIndex=segmentIndex;let skipCount=0;while(!0){numberIndex++;if(numberIndex>=segments.length){break}
let{number:nextNumber}=extractNumberSequence(segments[numberIndex]);if(nextNumber){newNumber+=nextNumber;skipCount++}else{break}}
combinedSegments.push(newNumber);segmentIndex+=skipCount+1}else{combinedSegments.push(currentSegment);segmentIndex++}}
prevSegments=[]}
onsButtonReadStart.addEventListener('click',()=>{if(isReading){stopReading=!0;if(readTimerId){clearTimeout(readTimerId);readTimerId=null}
isReading=!1;onsButtonReadStart.textContent='開始';calculateAndDisplayTimeAndCpsAndCpm();unfixContainerHeight()}else{if(currentSegmentIndex===0){initializeRead()}
stopReading=!1;readText()}});onsButtonReadRestart.addEventListener('click',()=>{stopReading=!0;if(readTimerId){clearTimeout(readTimerId);readTimerId=null}
isReading=!1;onsButtonReadStart.textContent='開始';currentSegmentIndex=0;combinedSegments=[];prevSegments=[];unfixContainerHeight();spanReadText.textContent='\u00A0';spanPrevReadText.innerHTML='\u00A0';spanNextReadText.innerHTML='\u00A0';if(totalInputChars>0){onsProgressBarCharCount.value=0;spanProgressCharcount.textContent=`0/${totalInputChars}`}
calculateAndDisplayTimeAndCpsAndCpm();totalInputChars=(textareaInputText.value).replace(" ","").replace("　","").length;onsButtonReadStart.click()})}
document.addEventListener('init',(event)=>{let page=event.target;if(page.id==='ons-page2'){リードページサンプル初期化(event)}})